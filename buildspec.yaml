version:      0.2 
 

phases: 
 
  install:  
    commands:  
    - apt-get update 
    - pip install awscli==1.16.209 
    - apt-get install zip 
    - apt-get install unzip
    - curl -sL https://deb.nodesource.com/setup_10.x | bash - 
    - apt-get install nodejs -y 
    - nodejs --version 
    - npm --version  
    - curr_dir=$(pwd) 
    - mkdir "$curr_dir/target" 
    - cd cloudformation 
    - versionId=$(date +"%m-%d-%Y-%H-%M-%S") 
    - echo $versionId
    - pip install ruamel.yaml
    - for paramsFile in ./Param*.json ;  
      do  
        echo $paramsFile;  
        tmp=$(mktemp); 
        sed "s/"empty"/${versionId}/g" $paramsFile > "$tmp" && mv "$tmp" $paramsFile;
        sh "${curr_dir}/cloudformation/layer-helper.sh" $paramsFile;
      done; 
    - cp *.json .. 
    - cd ..
 
  build: 
    commands: 
      - echo Starting build in $(pwd) 
      - echo Build started on $(date) 
      - echo ${S3Bucket} 
      - echo ${KMSKey} 
      - echo HOME ${HOME} 
      # build project folder and package build file 
      - ls -lrt "$curr_dir"
      - x=$(ls "$(pwd)")
      - for d in $x ;
        do
          mydir=${d};   
          if [ $mydir != "cloudformation" ] && [ $mydir != "EDBE-J1939-BDD" ] && [ -d "$mydir" ]; then 
              cd "$mydir"; 
              echo "Processing - $mydir"; 
              echo "Current dir - $(pwd)"; 
              if [ -f requirements.txt ]; then
                pip install -r requirements.txt -t ./lib ;
                zip -r "$mydir.zip" .;               
                cp "$mydir.zip" "$curr_dir/target"; 
              else           
                echo "unknown platform"; 
                break;        
              fi;        
              cd ..;     
          fi;  
        done || exit 1 
      - ls -lrt "$curr_dir/target" 
      - aws s3 cp "$curr_dir/target" s3://${S3Bucket}/$versionId --recursive 
      - aws s3 cp "$curr_dir/target" s3://${CrossRegionBucket}/$versionId --recursive
      - pwd 
      - ls -lrt 
      - cd $curr_dir 
      - aws cloudformation package 
        --template-file cloudformation/environment.yml 
        --s3-bucket ${S3Bucket} 
        --s3-prefix builds
        --kms-key-id ${KMSKey}
        --output-template-file transformed-template.yml
      - aws cloudformation package
        --template-file cloudformation/environment.yml
        --s3-bucket ${CrossRegionBucket}
        --s3-prefix builds
        --kms-key-id ${KMS_KEY_ProdRegion}
        --output-template-file transformed-template-us-east-2.yml
  post_build: 
    commands: 
      - echo Build completed on `date` 
 
# Below is required by CodePipeline, do not change.  
artifacts: 
  files:  
  - transformed-template.yml
  - transformed-template-us-east-2.yml 
  - Parameters-dev.json 
  - Parameters-test.json 
  - Parameters-stage.json 
  - Parameters-prod.json