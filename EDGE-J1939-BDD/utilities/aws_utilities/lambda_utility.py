"""
    This file contains all of the functions that directly interact with AWS Lambda.
"""

import boto3

from utilities.aws_utilities.cloud_watch_utility import get_log_events
from utilities.common_utility import exception_handler

LAMBDA_CLIENT = boto3.client("lambda")  # noqa


@exception_handler
def invoke_lambda_function(function_name, path_to_json_file, get_lambda_response=False,
                           get_execution_log=False, asynchronous=False):
    import json

    lambda_invocation_response = LAMBDA_CLIENT.invoke(
        FunctionName=function_name,
        InvocationType="Event" if asynchronous else "RequestResponse",
        LogType="Tail" if get_execution_log else "None",
        Payload=json.dumps(json.load(open(path_to_json_file)))
    )

    if asynchronous:  # If "asynchronous" is set to "True", simply return "True" to indicate a successful invocation
        return True
    elif get_execution_log:  # If "get_execution_log" is set to "True", then return the log created by the execution
        get_log_events("", "")
        return {"message": "the log response functionality is not yet implemented"}
    elif get_lambda_response:  # If "get_lambda_response" is set to "True return the response generated by the lambda
        return json.loads(lambda_invocation_response["Payload"].read().decode("utf-8"))
    else:  # Else, return the invocation AWS response object
        return lambda_invocation_response
