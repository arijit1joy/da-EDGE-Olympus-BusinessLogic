AWSTemplateFormatVersion: 2010-09-09
Description: >-
  The AWS CloudFormation template for deployment of the Edge Services. Version
  2.0
Parameters:
  ApplicationName:
    Type: String
  ApplicationNameCDA:
    Type: String
  DataQualityLambda:
    Type: String
  PTJ1939Header:
    Type: String
  ArtifactsBucket:
    Type: String
  DeviceHealthDeliveryStream:
    Type: String
  PTJ1939PostURL:
    Type: String
  VersionId:
    Type: String
  EdgeDBUtilityLayerVersion:
    Type: String
  EdgeCommonDBAPI:
    Type: String
  CDDataEndpoint:
    Type: String
  CDPTJ1939Header:
    Type: String
  ApplicationEnvironmentTag:
    Type: String
  DeliveryStreamName:
    Type: String
  CDPTJ1939PostURL:
    Type: String
  PTJ1939ApiKey:
    Type: String
  BDDReportsBucket:
    Type: String
    Default: da-edge-bdd-reports
  ProcessDataQuality:
    Type: String
  MaxAttempts:
    Type: String
  PrivateSubnetID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: private-subnet-id
  DbSubnet1:
    Type: String
  DbSubnet2:
    Type: String
  CrossIOTRoleArn:
    Type: String
  IotClientAccount:
    Type: String
  NimbusIoTRoleArn:
    Type: String
  NimbusIoTAccount:
    Type: String
  EDGERedisSecretName:
    Type: String
  RequestsPythonLayer:
    Type: AWS::SSM::Parameter::Value<String>
    Default: layer-RequestsPythonLayer
  PypikaPythonLayer:
    Type: AWS::SSM::Parameter::Value<String>
    Default: layer-CDAPypikaPythonLayer
  KinesisPythonLayer:
    Type: AWS::SSM::Parameter::Value<String>
    Default: layer-KinesisUtilityLayer
  SchedulerQueriesPythonLayer:
    Type: AWS::SSM::Parameter::Value<String>
    Default: layer-SchedulerQueriesLayer
  PCCAccountId:
    Type: String
  PCCRegion:
    Type: String
  CosmosAccountID:
    Type: String
  CosmosJ1939RuleArn:
    Type: String

Conditions:
  UseNotStageCondition: !Not [!Equals [!Ref ApplicationEnvironmentTag, stage]]
  UseDevOrTestCondition: !Or
    - !Equals [!Ref ApplicationEnvironmentTag, dev]
    - !Equals [!Ref ApplicationEnvironmentTag, test]

Resources:
  EdgeJ1939ProcessingBucketSSM:
    Type: "AWS::SSM::Parameter"
    Properties:
      Tier: Standard
      Type: String
      Description: j1939 Processing bucket name
      Value: !Ref EdgeJ1939ProcessingBucket
      Name: da-edge-j1939-processing-bucket

  EdgeJ1939DataLogBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - "s3:Put*"
              - "s3:Get*"
              - "s3:List*"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref EdgeJ1939DataLogBucket
                - /*
            Effect: Allow
            Principal:
              AWS: "{{resolve:ssm:EdgeUploadedFileProcessor:1}}"
          - Action:
              - "s3:Put*"
              - "s3:Get*"
              - "s3:List*"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref EdgeJ1939DataLogBucket
                - /*
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt EdgeJ1939CSVConverterLambdaRole.Arn
      Bucket: !Ref EdgeJ1939DataLogBucket

  Spnlistbucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub "${ApplicationName}-spn-list-${ApplicationEnvironmentTag}"
      # PublicAccessBlockConfiguration:
      #   BlockPublicAcls: true
      #   BlockPublicPolicy: true
      #   IgnorePublicAcls: true
      #   RestrictPublicBuckets: true
      Tags:
        - Value: Edge
          Key: Name

  EndpointBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - "s3:Put*"
              - "s3:Get*"
              - "s3:List*"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref EndpointBucket
                - /*
            Effect: Allow
            Principal:
              AWS:
                - !Sub >-
                  arn:aws:iam::${AWS::AccountId}:role/da-edge-device-EdgeRegistrationLambdaTrustRole-${ApplicationEnvironmentTag}
                - !If 
                  - UseNotStageCondition
                  - !GetAtt EdgeCPPTPosterLambdaRole.Arn
                  - !Ref "AWS::NoValue"
      Bucket: !Ref EndpointBucket

  EdgeJ1939Bucket:
    Type: "AWS::SSM::Parameter"
    Properties:
      Tier: Standard
      Type: String
      Description: Storing the j1939 bucket name
      Value: !Ref EdgeJ1939DataLogBucket
      Name: da-edge-j1939-datalog-bucket

  EdgeNGDI2CDSDKConversionLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub >-
        ${ApplicationName}-${ApplicationEnvironmentTag}-EdgeNGDI2CDSDKConversionLambdaRole
      Path: /
      Policies:
        - PolicyName: !Sub >-
            ${ApplicationName}-${ApplicationEnvironmentTag}-EdgeNGDI2CDSDKConversionLambdaWorkerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - "sqs:ReceiveMessage"
                  - "sqs:DeleteMessage"
                  - "sqs:GetQueueAttributes"
                Resource: !GetAtt EDGEJ1939NGDI2CDSDKConversionQueue.Arn
                Effect: Allow
              - Action:
                  - "sqs:SendMessage"
                Resource:
                  - !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:da-edge-common-lib-DatalogMetadata-${ApplicationEnvironmentTag}"
                  - !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:da-edge-common-lib-AuditTrailerQueue-${ApplicationEnvironmentTag}"
                Effect: Allow
              - Action:
                  - "logs:*"
                Resource: "arn:aws:logs:*:*:*"
                Effect: Allow
              - Action:
                  - "secretsmanager:GetSecretValue"
                Resource:
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/cda/commonlib/authtokensecrets-??????"
                Effect: Allow
              - Action:
                  - "ssm:Describe*"
                  - "ssm:Get*"
                  - "ssm:List*"
                Resource:
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/EDGECommonAPI"
                Effect: Allow
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com

  EdgeJ1939CSVConverterLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub >-
        ${ApplicationName}-${ApplicationEnvironmentTag}-EdgeJ1939CSVConverterLambdaRole
      Path: /
      Policies:
        - PolicyName: !Sub >-
            ${ApplicationName}-${ApplicationEnvironmentTag}-EdgeJ1939CSVConverterLambdaWorkerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:UpdateItem"
                  - "dynamodb:DeleteItem"
                Resource: !GetAtt ActiveFaultCodeTable.Arn
              - Action:
                  - "ssm:Get*"
                Resource:
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/da-edge-j1939-bdd-esn-list"
                Effect: Allow
              - Action:
                  - "sqs:ReceiveMessage"
                  - "sqs:DeleteMessage"
                  - "sqs:GetQueueAttributes"
                Resource: !GetAtt EDGEJ1939DataLogFilesQueue.Arn
                Effect: Allow
              - Action:
                  - "sqs:SendMessage"
                Resource:
                  - !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:da-edge-common-lib-DatalogMetadata-${ApplicationEnvironmentTag}"
                  - !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:da-edge-common-lib-AuditTrailerQueue-${ApplicationEnvironmentTag}"
                Effect: Allow
              - Action:
                  - "logs:*"
                Resource: "arn:aws:logs:*:*:*"
                Effect: Allow
              ## --- I could not find any ssm queries for this resource
              # - Action:
              #     - "ssm:Describe*"
              #     - "ssm:Get*"
              #     - "ssm:List*"
              #   Resource: "*"
              #   Effect: Allow
              - Action:
                  - "lambda:InvokeFunction"
                  - "lambda:InvokeAsync"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:EdgeCommonAPI-${ApplicationEnvironmentTag}"
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:da-edge-common-lib-EDGEDBReader-${ApplicationEnvironmentTag}"
                Effect: Allow
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com

  ObfuscateGPSCoordinatesLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Layers:
        - !Ref RequestsPythonLayer
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Sub "${VersionId}/da-edge-obfuscate-gps-coordinates.zip"
      FunctionName: !Sub "${ApplicationName}-ObfuscateGPSCoordinates-${ApplicationEnvironmentTag}"
      Tags:
        - Value: SAM
          Key: "Lambda:CreatedBy"
        - Value: Edge
          Key: Name
      MemorySize: 512
      ReservedConcurrentExecutions: 25
      Environment:
        Variables:
          LoggingLevel: "debug"
          APPLICATION_NAME: !Ref ApplicationName
          region: !Sub "${AWS::Region}"
          APPLICATION_ENVIRONMENT: !Ref ApplicationEnvironmentTag
          j1939_end_bucket: !Ref EdgeJ1939ProcessingBucket
          AuditTrailQueueUrl: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/da-edge-common-lib-AuditTrailerQueue-${ApplicationEnvironmentTag}"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt ObfuscateGPSCoordinatesLambdaRole.Arn
      Timeout: 300
      Runtime: python3.9

  ObfuscateGPSCoordinatesLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ObfuscateGPSCoordinatesLambda}-logs'
      RetentionInDays: 120 # 3 months, matches existing log group

  EdgePublicDataIoTTopicRule:
    Type: "AWS::IoT::TopicRule"
    Properties:
      TopicRulePayload:
        AwsIotSqlVersion: "2016-03-23"
        Actions:
          - Lambda:
              FunctionArn: !Sub "${ObfuscateGPSCoordinatesLambda.Arn}"
        RuleDisabled: false
        Sql: >-
          SELECT
          componentSerialNumber,telematicsPartnerName,dataSamplingConfigId, *
          from '$aws/things/+/public'
      RuleName: !Sub >-
        da_edge_j1939_EdgeIotRulePublicDataDataLogger_${ApplicationEnvironmentTag}

  ObfuscateGPSCoordinatesLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub >-
        ${ApplicationName}-ObfuscateGPSCoordinatesLambdaRole-${ApplicationEnvironmentTag}
      Path: /
      Policies:
        - PolicyName: !Sub >-
            ${ApplicationName}-ObfuscateGPSCoordinatesLambdaPolicy-${ApplicationEnvironmentTag}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - "logs:*"
                Resource: "arn:aws:logs:*:*:*"
                Effect: Allow
              - Action:
                  - "s3:Put*"
                  - "s3:Get*"
                  - "s3:List*"
                Resource: !Sub "${EdgeJ1939ProcessingBucket.Arn}"
                Effect: Allow
              ## --- I could not find any resources which this function currently calls
              # - Action:
              #     - "lambda:InvokeFunction"
              #     - "lambda:InvokeAsync"
              #   Resource: "*"
                # Effect: Allow
              - Action:
                  - "sqs:SendMessage"
                Resource: !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:da-edge-common-lib-AuditTrailerQueue-${ApplicationEnvironmentTag}"
                Effect: Allow
              - Action: "sts:AssumeRole"
                Resource:
                  - !Ref CrossIOTRoleArn
                  - !Ref NimbusIoTRoleArn
                Effect: Allow
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com

  SpnlistbucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - "s3:Put*"
              - "s3:Get*"
              - "s3:List*"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref Spnlistbucket
                - /*
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt EdgeNGDI2CDSDKConversionLambdaRole.Arn
      Bucket: !Ref Spnlistbucket

  EdgeJ1939DataLogBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      NotificationConfiguration:
        QueueConfigurations:
          - Queue: !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${ApplicationName}-DataLogFilesQueue-${ApplicationEnvironmentTag}"
            Event: "s3:ObjectCreated:*"
      BucketName: !Sub "da-edge-j1939-datalog-files-${ApplicationEnvironmentTag}"
      # PublicAccessBlockConfiguration:
      #   BlockPublicAcls: true
      #   BlockPublicPolicy: true
      #   IgnorePublicAcls: true
      #   RestrictPublicBuckets: true
      Tags:
        - Value: Edge
          Key: Name
    DependsOn:
      - EDGEJ1939DataLogFilesQueuePolicy

  RoleForJ1939StreamBucket:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${ApplicationName}-${ApplicationEnvironmentTag}-J1939StreamBucket"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - iot.amazonaws.com

  LambdaInvokePermissionJ1939ProcessingBucket:
    Type: "AWS::Lambda::Permission"
    Condition: UseNotStageCondition
    Properties:
      Action: "lambda:InvokeFunction"
      SourceAccount: !Ref "AWS::AccountId"
      FunctionName: !GetAtt EdgeCPPTPoster.Arn
      SourceArn: !Join
        - ""
        - - "arn:aws:s3:::"
          - !Sub "edge-j1939-${ApplicationEnvironmentTag}"
      Principal: s3.amazonaws.com

  EdgeNGDI2CDSDKConversion:
    Type: "AWS::Lambda::Function"
    Properties:
      Layers:
        - !Ref RequestsPythonLayer
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Sub "${VersionId}/EdgeNGDI2CDSDKConversion.zip"
      Description: Function to convert the NDGI to CD SDK Format
      Tags:
        - Value: SAM
          Key: "Lambda:CreatedBy"
        - Value: Edge
          Key: Name
      MemorySize: 1536
      ReservedConcurrentExecutions: 25
      Environment:
        Variables:
          LoggingLevel: "debug"
          fmi_indicator: FMI
          spn_parameter_json_object_key: edge_spn_parameter_name.json
          edgeCommonAPIURL: !Ref EdgeCommonDBAPI
          device_health_delivery_stream: !Ref DeviceHealthDeliveryStream
          notification_version: 2.5.2
          APPLICATION_ENVIRONMENT: !Ref ApplicationEnvironmentTag
          class_arg_map: >-
            {"messageFormatVersion": "notification_version",
            "telematicsPartnerName": "telematics_partner_name",
            "customerReference": "customer_reference", "componentSerialNumber":
            "engine_serial_number", "equipmentId": "equipment_id", "vin": "vin",
            "telematicsDeviceId": "telematics_box_id", "samples":
            {"dateTimestamp": "occurrence_date_time",
            "convertedDeviceParameters": {"messageID":
            "telematics_partner_message_id", "Latitude": "latitude",
            "Longitude": "longitude", "Altitude": "altitude",
            "Direction_Heading": "direction_heading", "Vehicle_Distance":
            "vehicle_distance", "Location_Text_Description":
            "location_text_description", "GPS_Vehicle_Speed":
            "gps_vehicle_speed"}, "convertedEquipmentParameters": [{"protocol":
            "datalink_bus", "deviceId": "source_address", "parameters":
            "snapshots"}], "convertedEquipmentFaultCodes": [{"activeFaultCodes":
            "active_faults", "inactiveFaultCodes": ""}]}}
          environment: !Ref ApplicationEnvironmentTag
          param_indicator: parameters
          active_fault_code_indicator: activeFaultCodes
          time_stamp_param: dateTimestamp
          message_format_version_indicator: messageFormatVersion
          cd_url: !Ref CDDataEndpoint
          spn_indicator: SPN
          converted_device_params: convertedDeviceParameters
          converted_equip_fc: convertedEquipmentFaultCodes
          Region: !Sub "${AWS::Region}"
          active_cd_parameter: active
          APPLICATION_NAME: !Ref ApplicationName
          region: !Sub "${AWS::Region}"
          inactive_fault_code_indicator: inactiveFaultCodes
          count_indicator: Occurrence_Count
          spn_parameter_json_object: !Ref Spnlistbucket
          converted_equip_params: convertedEquipmentParameters
          delivery_stream_name: !Ref DeliveryStreamName
          MaxAttempts: !Ref MaxAttempts
          QueueUrl: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${ApplicationName}-NGDI2CDSDKConversionQueue-${ApplicationEnvironmentTag}"
          metaWriteQueueUrl: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/da-edge-common-lib-DatalogMetadata-${ApplicationEnvironmentTag}"
          AuditTrailQueueUrl: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/da-edge-common-lib-AuditTrailerQueue-${ApplicationEnvironmentTag}"
      Handler: conversion.lambda_handler
      Role: !GetAtt EdgeNGDI2CDSDKConversionLambdaRole.Arn
      Timeout: 900
      Runtime: python3.9
      FunctionName: !Sub "${ApplicationName}-EdgeNGDI2CDSDKConversion-${ApplicationEnvironmentTag}"

  EdgeNGDI2CDSDKConversionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${EdgeNGDI2CDSDKConversion}-logs'
      RetentionInDays: 120 # 3 months, matches existing log group

  LambdaInvokePermissionJ1939Bucket:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      SourceAccount: !Ref "AWS::AccountId"
      FunctionName: !GetAtt EdgeJ1939CSVConverter.Arn
      SourceArn: !Join
        - ""
        - - "arn:aws:s3:::"
          - !Sub "da-edge-${AWS::AccountId}-decrypt-files-${ApplicationEnvironmentTag}"
      Principal: s3.amazonaws.com

  EdgeCPPTPosterLambdaRole:
    Type: "AWS::IAM::Role"
    Condition: UseNotStageCondition
    Properties:
      RoleName: !Sub "${ApplicationName}-${ApplicationEnvironmentTag}-EdgeCPPTPosterLambdaRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/SecretsManagerReadWrite"
      Path: /
      Policies:
        - PolicyName: !Sub >-
            ${ApplicationName}-${ApplicationEnvironmentTag}-EdgeCPPTPosterLambdaWorkerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - "kafka:*" # TODO, tighten
                Resource: "*" # TODO, tighten
                Effect: Allow
              - Action:
                  - kms:DescribeKey
                  - kms:ListAliases
                  - kms:ListKeys
                  - "kms:*"
                Resource: "*" # TODO, tighten
                Effect: Allow
              - Action:
                  - "sqs:ReceiveMessage"
                  - "sqs:DeleteMessage"
                  - "sqs:GetQueueAttributes"
                Resource: !GetAtt EDGEJ1939CPPTPosterQueue.Arn
                Effect: Allow
              - Action:
                  - "sqs:SendMessage"
                Resource:
                  - !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:da-edge-common-lib-DatalogMetadata-${ApplicationEnvironmentTag}"
                  - !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:da-edge-common-lib-AuditTrailerQueue-${ApplicationEnvironmentTag}"
                Effect: Allow
              - Action:
                  - "logs:*"
                Resource: "arn:aws:logs:*:*:*"
                Effect: Allow
              - Action:
                  - "ssm:Describe*"
                  - "ssm:Get*"
                  - "ssm:List*"
                Resource:
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/da-edge-j1939-content-spec-value"
                Effect: Allow
              - Action:
                  - "secretsmanager:GetSecretValue"
                Resource:
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:pt_xapi_key-??????"
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/da-EDGE-Olympus/elasticache/edge-rw-??????"
                  - !If
                    - UseDevOrTestCondition
                    - Fn::ImportValue: 
                        'Fn::Sub': "${ApplicationNameCDA}-msk-cluster-secret-${ApplicationEnvironmentTag}"
                    - !Ref "AWS::NoValue"
                Effect: Allow
              - Action:
                  - "lambda:InvokeFunction"
                  - "lambda:InvokeAsync"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:EdgeCommonAPI-${ApplicationEnvironmentTag}"
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:da-edge-common-lib-EDGEDBReader-${ApplicationEnvironmentTag}"
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${DataQualityLambda}-${ApplicationEnvironmentTag}"
                Effect: Allow
              - !If
                - UseDevOrTestCondition
                - Action:
                    - "kafka:ListClusters"
                    - "kafka:DescribeCluster"
                    - "kafka:GetBootstrapBrokers"
                  Resource:
                    - Fn::ImportValue: 
                        'Fn::Sub': "${ApplicationNameCDA}-msk-cluster-arn-${ApplicationEnvironmentTag}"
                  Effect: Allow
                - !Ref "AWS::NoValue"
              - Action:
                  - "ec2:CreateNetworkInterface"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DeleteNetworkInterface"
                Resource: 'arn:aws:ec2:*:*:*'
                Effect: Allow
              - Action:
                  - "sts:AssumeRole"
                Resource:
                  - !Sub "arn:aws:iam::${PCCAccountId}:role/EdgeKinesisProducerRole"
                Effect: Allow
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com

  EdgeJ1939ProcessingBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: BucketOwnerFullControl
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            ExposedHeaders:
              - ETag
              - x-amz-meta-custom-header
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
            AllowedOrigins:
              - "*"
      Tags:
        - Value: Edge
          Key: Name
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub "edge-j1939-${ApplicationEnvironmentTag}"
      # PublicAccessBlockConfiguration:
      #   BlockPublicAcls: true
      #   BlockPublicPolicy: true
      #   IgnorePublicAcls: true
      #   RestrictPublicBuckets: true
      NotificationConfiguration:
        QueueConfigurations:
          - Queue: !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${ApplicationName}-CPPTPosterQueue-${ApplicationEnvironmentTag}"
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: ConvertedFiles
                  - Name: suffix
                    Value: .json
            Event: "s3:ObjectCreated:*"
          - Queue: !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${ApplicationName}-NGDI2CDSDKConversionQueue-${ApplicationEnvironmentTag}"
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: NGDI
                  - Name: suffix
                    Value: .json
            Event: "s3:ObjectCreated:*"
    DependsOn:
      - EDGEJ1939CPPTPosterQueuePolicy
      - EDGEJ1939NGDI2CDSDKConversionQueuePolicy

  EdgeJ1939PTSSM:
    Type: "AWS::SSM::Parameter"
    Properties:
      Tier: Standard
      Type: String
      Description: j1939 PT FC and Periodic Datacontent Spec values
      #Value: '{"FC" : "Event1_5", "Periodic" : "Periodic1_9","PT_TSP": "Cummins"}'
      Value: '{"FC" : "Event1_5", "Periodic" : "Periodic1_9","PT_TSP": "Cummins","EngineStatOverride":"EngineStat_9","LoadFactorOverride":"LoadFactor_9","EngineStatSc":"SC8091","LoadFactorSc":"SC8093"}'
      Name: da-edge-j1939-content-spec-value

  EdgeJ1939CSVConverterBDDEsnSSM:
    Type: "AWS::SSM::Parameter"
    Properties:
      Tier: Standard
      Type: String
      Description: j1939 csv converter lambda bdd esn list
      Value: '{"esn":["19299951","19299955","19299956","19299952","19299954","CMMNS**19299954**************************************************************"]}'
      Name: da-edge-j1939-bdd-esn-list

  EndpointBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub "${ApplicationName}-endpoint-bucket-${ApplicationEnvironmentTag}"
      # PublicAccessBlockConfiguration:
      #   BlockPublicAcls: true
      #   BlockPublicPolicy: true
      #   IgnorePublicAcls: true
      #   RestrictPublicBuckets: true
      Tags:
        - Value: Edge
          Key: Name

  LambdaInvokeObfuscateGPSCoordinatesPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref ObfuscateGPSCoordinatesLambda
      SourceArn: !GetAtt EdgePublicDataIoTTopicRule.Arn
      Principal: iot.amazonaws.com

  LambdaInvokeObfuscateGPSCoordinatesPermissionFromCosmosAccount:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      SourceAccount: !Ref CosmosAccountID
      SourceArn: !Ref CosmosJ1939RuleArn
      FunctionName: !Ref ObfuscateGPSCoordinatesLambda
      Principal: iot.amazonaws.com

  LambdaInvokeIotObfuscateGPSCoordinatesPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref ObfuscateGPSCoordinatesLambda
      SourceArn: !Sub "arn:aws:iot:${AWS::Region}:${IotClientAccount}:rule/da_edge_j1939_EdgeIotRule_PublicDataDataLogger_${ApplicationEnvironmentTag}"
      Principal: iot.amazonaws.com
  
  LambdaInvokePSBUObfuscateGPSCoordinatesPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref ObfuscateGPSCoordinatesLambda
      SourceArn: !Sub "arn:aws:iot:${AWS::Region}:${NimbusIoTAccount}:rule/cda_nimbus_public_datalogger_topicrule_${ApplicationEnvironmentTag}"
      Principal: iot.amazonaws.com

  EdgeJ1939CSVConverter:
    Type: "AWS::Lambda::Function"
    Properties:
      Layers:
        - !Ref RequestsPythonLayer
        - !Ref KinesisPythonLayer
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Sub "${VersionId}/EdgeJ1939CSVConverter.zip"
      FunctionName: !Sub "${ApplicationName}-EdgeJ1939CSVConverter-${ApplicationEnvironmentTag}"
      Tags:
        - Value: SAM
          Key: "Lambda:CreatedBy"
        - Value: Edge
          Key: Name
      MemorySize: 1024
      ReservedConcurrentExecutions: 25
      Environment:
        Variables:
          LoggingLevel: "debug"
          APPLICATION_ENVIRONMENT: !Ref ApplicationEnvironmentTag
          CPPostBucket: !Sub "edge-j1939-${ApplicationEnvironmentTag}"
          region: !Sub "${AWS::Region}"
          NGDIBody: >-
            {"messageFormatVersion": "", "telematicsPartnerName": "",
            "customerReference": "", "componentSerialNumber": "", "equipmentId":
            "", "vin": "", "telematicsDeviceId": "", "dataSamplingConfigId": "",
            "dataEncryptionSchemeId": "", "numberOfSamples": "", "samples": []}
          environment: !Ref ApplicationEnvironmentTag
          edgeCommonAPIURL: !Ref EdgeCommonDBAPI
          EDGEDBReader_ARN: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:da-edge-common-lib-EDGEDBReader-${ApplicationEnvironmentTag}"
          EDGEDBCommonAPI_ARN: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:EdgeCommonAPI-${ApplicationEnvironmentTag}"
          APPLICATION_NAME: !Ref ApplicationName
          J1939ActiveFaultCodeTable: !Sub "J1939ActiveFaultCodeTable-${ApplicationEnvironmentTag}"
          QueueUrl: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${ApplicationName}-DataLogFilesQueue-${ApplicationEnvironmentTag}"
          mapTspFromOwner: >-
            {"EBU": "Cummins", "PSBU": "Cummins" ,"TATA": "India_Edge",
            "Navistar": "Navistar", "N2": "Navistar" ,"Paccar":"Paccar", "Siemens":"Siemens", "TataMotors":"Accolade", "Cosmos":"COSPA"}
          delivery_stream_name: !Ref DeliveryStreamName
          Region: !Sub "${AWS::Region}"
          MaxAttempts: !Ref MaxAttempts
          metaWriteQueueUrl: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/da-edge-common-lib-DatalogMetadata-${ApplicationEnvironmentTag}"
          AuditTrailQueueUrl: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/da-edge-common-lib-AuditTrailerQueue-${ApplicationEnvironmentTag}"
      Handler: ConverterLambda.lambda_handler
      Role: !GetAtt EdgeJ1939CSVConverterLambdaRole.Arn
      Timeout: 900
      Runtime: python3.9

  EdgeJ1939CSVConverterLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${EdgeJ1939CSVConverter}-logs'
      RetentionInDays: 120 # 3 months, matches existing log group

  # PandasPythonLayer:
  #   Type: "AWS::Lambda::LayerVersion"
  #   Properties:
  #     Content:
  #       S3Bucket: !Ref ArtifactsBucket
  #       S3Key: python_pandas.zip
  #     LayerName: pandas-requests
  #     Description: python-requests for restful API calls
  #     CompatibleRuntimes:
  #       - python3.6
  #       - python3.7

  J1939StreamingBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - "s3:Put*"
              - "s3:Get*"
              - "s3:List*"
            Resource:
              - !Sub ${EdgeJ1939ProcessingBucket.Arn}
            Effect: Allow
            Principal:
              AWS:
                - !Sub >-
                  arn:aws:iam::${AWS::AccountId}:role/${ApplicationName}-${ApplicationEnvironmentTag}-J1939StreamBucket
                - !GetAtt EdgeJ1939CSVConverterLambdaRole.Arn
                - !Sub >-
                  arn:aws:iam::${AWS::AccountId}:role/da-edge-oem-OEMLambdaTrustRole-${ApplicationEnvironmentTag}
          - Action:
              - "s3:Put*"
              - "s3:Get*"
              - "s3:List*"
            Resource:
              - !Sub "${EdgeJ1939ProcessingBucket.Arn}/*"
            Effect: Allow
            Principal:
              AWS:
                - !If 
                  - UseNotStageCondition
                  - !GetAtt EdgeCPPTPosterLambdaRole.Arn
                  - !Ref "AWS::NoValue"
                - !GetAtt EdgeNGDI2CDSDKConversionLambdaRole.Arn
                - !GetAtt ObfuscateGPSCoordinatesLambdaRole.Arn
                - !GetAtt EdgeJ1939CSVConverterLambdaRole.Arn
          - Action:
              - "s3:Put*"
              - "s3:Get*"
              - "s3:List*"
              - "s3:Delete*"
            Resource:
              - !Sub "${EdgeJ1939ProcessingBucket.Arn}/*"
              - !Sub "${EdgeJ1939ProcessingBucket.Arn}"
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/da-edge-common-lib-NGCA-BDDTrustRole-${ApplicationEnvironmentTag}"
      Bucket: !Ref EdgeJ1939ProcessingBucket

  LambdaInvokeNGDI2CDSDKPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      SourceAccount: !Ref "AWS::AccountId"
      FunctionName: !GetAtt EdgeNGDI2CDSDKConversion.Arn
      SourceArn: !Join
        - ""
        - - "arn:aws:s3:::"
          - !Sub "edge-j1939-${ApplicationEnvironmentTag}"
      Principal: s3.amazonaws.com

  EDGECPPTAPISecret:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Tags:
        - Value: !Sub "${ApplicationName}"
          Key: Name
        - Value: !Ref ApplicationEnvironmentTag
          Key: ApplicationEnvironment
      SecretString: !Sub '{"x-api-key": "${PTJ1939ApiKey}"}'
      Name: pt_xapi_key
      Description: PT x-API key

  EdgeEndpointJ1939Bucket:
    Type: "AWS::SSM::Parameter"
    Properties:
      Tier: Standard
      Type: String
      Description: Endpoint j1939 bucket name
      Value: !Ref EndpointBucket
      Name: da-edge-j1939-endpoint-bucket

  EdgeCPPTPoster:
    Type: "AWS::Lambda::Function"
    Condition: UseNotStageCondition
    Properties:
      Layers:
        - !Ref RequestsPythonLayer
        - !Ref PypikaPythonLayer
        - !Ref SchedulerQueriesPythonLayer
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Sub "${VersionId}/EdgeCPPTPoster.zip"
      FunctionName: !Sub "${ApplicationName}-EdgeCPPTPoster-${ApplicationEnvironmentTag}"
      Tags:
        - Value: SAM
          Key: "Lambda:CreatedBy"
        - Value: Edge
          Key: Name
      MemorySize: 1536
      ReservedConcurrentExecutions: 25
      Environment:
        Variables:
          LoggingLevel: "debug"
          cd_device_owners: '{"EBU": "EBU", "TATA": "TATA", "TataMotors":"TataMotors", "Cosmos":"Cosmos"}'
          Environment: !Sub "${ApplicationEnvironmentTag}"
          RedisSecretName: !Ref EDGERedisSecretName
          edgeCommonAPIURL: !Ref EdgeCommonDBAPI
          EDGEDBReader_ARN: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:da-edge-common-lib-EDGEDBReader-${ApplicationEnvironmentTag}"
          EDGEDBCommonAPI_ARN: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:EdgeCommonAPI-${ApplicationEnvironmentTag}"
          APPLICATION_ENVIRONMENT: !Ref ApplicationEnvironmentTag
          PTJ1939Header: !Ref PTJ1939Header
          environment: !Ref ApplicationEnvironmentTag
          PSBUSpecifier: psbu
          CPPTGetDevInfo: >-
            {"method": "get", "query": "SELECT DEVICE_TYPE, DEVICE_OWNER, DOM
            FROM da_edge_olympus.DEVICE_INFORMATION WHERE DEVICE_ID =
            %(devId)s;", "input": {"Params": [{"devId": "devId"}]}}
          EBUSpecifier: onhighway
          EndpointFile: EndpointJson.json
          DataQualityLambda: !Sub "${DataQualityLambda}-${ApplicationEnvironmentTag}"
          psbu_device_owner: '{"PSBU": "PSBU", "Siemens":"Siemens"}'
          JSONFormat: SDK
          Region: !Sub "${AWS::Region}"
          CDPTJ1939Header: !Ref CDPTJ1939Header
          EndpointBucket: !Sub "${ApplicationName}-endpoint-bucket-${ApplicationEnvironmentTag}"
          APPLICATION_NAME: !Ref ApplicationName
          mapTspFromOwner: >-
            {"EBU": "Cummins", "PSBU": "Cummins" ,"TATA": "India_Edge",
            "Navistar": "Navistar", "N2": "Navistar" ,"Paccar":"Paccar", "Siemens":"Siemens", "TataMotors":"Accolade", "Cosmos":"COSPA"}
          UseEndpointBucket: "Y"
          CPPostBucket: !Sub "edge-j1939-${ApplicationEnvironmentTag}"
          region: !Sub "${AWS::Region}"
          PTJ1939PostURL: !Ref PTJ1939PostURL
          PTxAPIKey: pt_xapi_key
          delivery_stream_name: !Ref DeliveryStreamName
          CDPTJ1939PostURL: !Ref CDPTJ1939PostURL
          QueueUrl: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${ApplicationName}-CPPTPosterQueue-${ApplicationEnvironmentTag}"
          PowerGenValue: powerGen
          metaWriteQueueUrl: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/da-edge-common-lib-DatalogMetadata-${ApplicationEnvironmentTag}"
          AuditTrailQueueUrl: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/da-edge-common-lib-AuditTrailerQueue-${ApplicationEnvironmentTag}"
          ProcessDataQuality: !Ref ProcessDataQuality
          MaxAttempts: !Ref MaxAttempts
          mskSecretArn: !If
            - UseDevOrTestCondition
            - Fn::ImportValue: 
                'Fn::Sub': "${ApplicationNameCDA}-msk-cluster-secret-${ApplicationEnvironmentTag}"
            - !Ref "AWS::NoValue"
          mskClusterArn: !If
            - UseDevOrTestCondition
            - Fn::ImportValue: 
                'Fn::Sub': "${ApplicationNameCDA}-msk-cluster-arn-${ApplicationEnvironmentTag}"
            - !Ref "AWS::NoValue"
          topicName: "j1939-pt-topic"
          publishKafka: True
          ptTopicInfo: '{"topicName": "nimbuspt-j1939-{j1939_type}", "bu":"PSBU","file_type":"JSON"}'
          pcc_role_arn: !Sub "arn:aws:iam::${PCCAccountId}:role/EdgeKinesisProducerRole"
          j1939_stream_arn: !Sub "arn:aws:kinesis:${PCCRegion}:${PCCAccountId}:stream/J1939Events"
          pcc_region: !Ref PCCRegion

      Handler: PosterLambda.lambda_handler
      Role: !GetAtt EdgeCPPTPosterLambdaRole.Arn
      Timeout: 900
      Runtime: python3.9
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: 
              'Fn::Sub': "edge-redis-lambda-security-group-${ApplicationEnvironmentTag}"
          - !If
            - UseDevOrTestCondition
            - Fn::ImportValue: 
                'Fn::Sub': "${ApplicationNameCDA}-msk-cluster-security-group-${ApplicationEnvironmentTag}"
            - !Ref "AWS::NoValue"
        SubnetIds:
          - !Ref DbSubnet1
          - !Ref DbSubnet2
          - !If
            - UseDevOrTestCondition
            - !Ref PrivateSubnetID
            - !Ref "AWS::NoValue"

  EdgeCPPTPosterLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: UseNotStageCondition
    Properties:
      LogGroupName: !Sub '/aws/lambda/${EdgeCPPTPoster}-logs'
      RetentionInDays: 120 # 3 months, matches existing log group

  EdgeCPPTPosterEventInvokeConfig:
    Type: AWS::Lambda::EventInvokeConfig
    Condition: UseNotStageCondition
    Properties:
      FunctionName: !Ref EdgeCPPTPoster
      MaximumRetryAttempts: 1
      Qualifier: "$LATEST"

  CodeBuildReportGroup:
    Type: AWS::CodeBuild::ReportGroup
    Properties:
      Name: !Sub "EdgeJ1939BDDReports-${ApplicationEnvironmentTag}"
      Type: TEST
      ExportConfig:
        ExportConfigType: S3
        S3Destination:
          Bucket: !Sub "${BDDReportsBucket}-${ApplicationEnvironmentTag}"
          Path: reports/

  # Queues
  EDGEJ1939DataLogFilesQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${ApplicationName}-DataLogFilesQueue-${ApplicationEnvironmentTag}"
      VisibilityTimeout: 900
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - "EDGEJ1939DataLogFilesDLQueue"
            - "Arn"
        maxReceiveCount: 2

  EDGEJ1939DataLogFilesDLQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${ApplicationName}-DataLogFilesDLQueue-${ApplicationEnvironmentTag}"

  # Queue Policies
  EDGEJ1939DataLogFilesQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Sub "${ApplicationName}-DataLogFilesQueue-${ApplicationEnvironmentTag}"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - "sqs:SendMessage"
            Resource:
              - !Sub >-
                arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${ApplicationName}-DataLogFilesQueue-${ApplicationEnvironmentTag}
            Effect: Allow
            Principal:
              Service: "s3.amazonaws.com"
            Condition:
              ArnEquals:
                aws:SourceArn: !Sub "arn:aws:s3:::da-edge-j1939-datalog-files-${ApplicationEnvironmentTag}"
    DependsOn:
      - EDGEJ1939DataLogFilesQueue

  # Lambda Event Source Mappings
  EDGEJ1939DataLogFilesQueueTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 50
      MaximumBatchingWindowInSeconds: 60
      Enabled: true
      EventSourceArn: !GetAtt EDGEJ1939DataLogFilesQueue.Arn
      FunctionName: !GetAtt EdgeJ1939CSVConverter.Arn

  # Queues
  EDGEJ1939CPPTPosterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${ApplicationName}-CPPTPosterQueue-${ApplicationEnvironmentTag}"
      VisibilityTimeout: 900
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - "EDGEJ1939CPPTPosterDLQueue"
            - "Arn"
        maxReceiveCount: 2

  EDGEJ1939CPPTPosterDLQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${ApplicationName}-CPPTPosterDLQueue-${ApplicationEnvironmentTag}"

  # Queue Policies
  EDGEJ1939CPPTPosterQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Sub "${ApplicationName}-CPPTPosterQueue-${ApplicationEnvironmentTag}"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - "sqs:SendMessage"
            Resource:
              - !Sub >-
                arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${ApplicationName}-CPPTPosterQueue-${ApplicationEnvironmentTag}
            Effect: Allow
            Principal:
              Service: "s3.amazonaws.com"
            Condition:
              ArnEquals:
                aws:SourceArn: !Sub "arn:aws:s3:::edge-j1939-${ApplicationEnvironmentTag}"
    DependsOn:
      - EDGEJ1939CPPTPosterQueue

  # Lambda Event Source Mappings
  EDGEJ1939CPPTPosterQueueTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Condition: UseNotStageCondition
    Properties:
      BatchSize: 50
      MaximumBatchingWindowInSeconds: 60
      Enabled: true
      EventSourceArn: !GetAtt EDGEJ1939CPPTPosterQueue.Arn
      FunctionName: !GetAtt EdgeCPPTPoster.Arn

  # Queues
  EDGEJ1939NGDI2CDSDKConversionQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${ApplicationName}-NGDI2CDSDKConversionQueue-${ApplicationEnvironmentTag}"
      VisibilityTimeout: 900
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - "EDGEJ1939NGDI2CDSDKConversionDLQueue"
            - "Arn"
        maxReceiveCount: 2

  EDGEJ1939NGDI2CDSDKConversionDLQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${ApplicationName}-NGDI2CDSDKConversionDLQueue-${ApplicationEnvironmentTag}"

  # Queue Policies
  EDGEJ1939NGDI2CDSDKConversionQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Sub "${ApplicationName}-NGDI2CDSDKConversionQueue-${ApplicationEnvironmentTag}"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - "sqs:SendMessage"
            Resource:
              - !Sub >-
                arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${ApplicationName}-NGDI2CDSDKConversionQueue-${ApplicationEnvironmentTag}
            Effect: Allow
            Principal:
              Service: "s3.amazonaws.com"
            Condition:
              ArnEquals:
                aws:SourceArn: !Sub "arn:aws:s3:::edge-j1939-${ApplicationEnvironmentTag}"
    DependsOn:
      - EDGEJ1939NGDI2CDSDKConversionQueue

  # Lambda Event Source Mappings
  EDGEJ1939NGDI2CDSDKConversionQueueTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 50
      MaximumBatchingWindowInSeconds: 60
      Enabled: true
      EventSourceArn: !GetAtt EDGEJ1939NGDI2CDSDKConversionQueue.Arn
      FunctionName: !GetAtt EdgeNGDI2CDSDKConversion.Arn

  ActiveFaultCodeTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "esn"
          AttributeType: "S"
      BillingMode: "PAY_PER_REQUEST"
      KeySchema:
        - AttributeName: "esn"
          KeyType: "HASH"
      TableName: !Sub "J1939ActiveFaultCodeTable-${ApplicationEnvironmentTag}"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
  TTLParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/J1939ActiveFaultCodeTable-${ApplicationEnvironmentTag}/ttl-in-seconds"
      Type: String
      Value: "86400"